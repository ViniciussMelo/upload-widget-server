services:
  pg:
    image: bitnami/postgresql:latest
    ports: 
      - '5433:5432'
    environment:
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
      - POSTGRES_DB=upload
    volumes:
      - './docker:/docker-entrypoint-initdb.d'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U docker -d upload"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    image: node:22-alpine
    ports:
      - '3333:3333'
    working_dir: /app
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3333
      - DATABASE_URL=postgresql://docker:docker@pg:5432/upload
      - CLOUDFLARE_ACCOUNT_ID=${CLOUDFLARE_ACCOUNT_ID}
      - CLOUDFLARE_ACCESS_KEY_ID=${CLOUDFLARE_ACCESS_KEY_ID}
      - CLOUDFLARE_SECRET_ACCESS_KEY=${CLOUDFLARE_SECRET_ACCESS_KEY}
      - CLOUDFLARE_BUCKET=${CLOUDFLARE_BUCKET}
      - CLOUDFLARE_PUBLIC_URL=${CLOUDFLARE_PUBLIC_URL}
    depends_on:
      pg:
        condition: service_healthy
    command: sh -c "npm install && npm run dev"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s